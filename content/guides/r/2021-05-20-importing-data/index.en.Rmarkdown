---
title: Importing Data
author: Carlos Rodriguez
date: '2021-05-20'
slug: importing-data
categories: []
tags: []
subtitle: ''
summary: ''
authors: []
lastmod: '2021-05-20T07:22:55-06:00'
featured: no
image:
  caption: ''
  focal_point: ''
  preview_only: no
projects: []
type: book
---


<!-- -----------------------TABS---------------------------------- -->
{{< tabs tabTotal="4" tabName1="CSV" tabName2="Excel" tabName3="SPSS" >}}


<!-- -----------------------Tab 1---------------------------------- -->
{{< tab tabNum="1" >}}
<!-- ### read.table() -->
<!-- ```{r, eval=FALSE} -->
<!-- # Read csv files -->
<!-- library(readr) -->
<!-- #read_csv("file_name.csv") -->
<!-- ``` -->

### read.csv()
```{r, eval=FALSE}
# Read csv files
read_csv("file_name.csv")
```

### read.csv()
`read_csv()` from the readr package will read in a .csv files as a tibble. Tibbles are a subtype of data frame that have been modified to work well with tidyverse functions. `read_csv()` is a great function to use if you know that your data are in long format for running statistical analyses and if they aren't too massive. When working with large .csv files, I prefer reading with read.table() because it is much faster.
```{r, eval=FALSE}
# Read csv files
library(readr)
read_csv("file_name.csv")

# Read csv files without Parsed column specification output
read_csv("file_name.csv", col_types = cols())
```

{{< /tab >}}


<!-- -----------------------Tab 2---------------------------------- -->
{{< tab tabNum="2" >}}
### read_excel
When working with data I tend to prefer working with .csv files because they aren't as finicky compared to Excel. But sometimes Excel files have sheets and can't be saved as .csv and will require the use of the readxl package and the `read_excel()` function. The `
```{r,eval=FALSE}
# Read excel files
install.packages("readxl")
library("readxl")
read_excel("file_name.xlsx")


# Alternative package for reading .xlsx files
# The benefit of this is that it does not require
# java when writing to a .xlsx file 
library(openxlsx) #for outputting tables, avoid java errors

```
{{< /tab >}}





<!-- -----------------------Tab 3---------------------------------- -->
{{< tab tabNum="3" >}}
```{r, eval=FALSE}
# Read SPSS files
install.packages("haven")
library(haven)
read_sav("file_name.sav")
```
{{< /tab >}}




{{< /tabs >}}