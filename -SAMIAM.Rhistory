into = c("Condition", "Angle"),
sep = -3)
long.data %>% gather(key = condition.angle,
value = reaction_time,
-id) %>%
separate(col = condition.angle,
into = c("Condition", "Angle"),
sep = -1)
head(long.data %>% gather(key = condition.angle,
value = reaction_time,
-id) %>%
separate(col = condition.angle,
into = c("condition", "angle"),
sep = 1)
)
head(long.data %>% gather(key = condition.angle,
value = reaction_time,
-id) %>%
separate(col = condition.angle,
into = c("condition", "angle"),
sep = -1)
)
head(long.data %>% gather(key = condition.angle,
value = reaction_time,
-id) %>%
separate(col = condition.angle,
into = c("condition", "angle"),
sep = -1) %>%
arrange(id,
condition,
angle)
head(long.data %>% gather(key = condition.angle,
value = reaction_time,
-id) %>%
separate(col = condition.angle,
into = c("condition", "angle"),
sep = -1) %>%
arrange(id,
condition,
angle)
)
long.data %>% long.data %>% gather(key = condition.angle,
value = reaction_time,
-id) %>%
separate(col = condition.angle,
into = c("condition", "angle"),
sep = -1) %>%
arrange(id,
condition,
angle)
long.data %>% long.data %>% gather(key = condition.angle,
value = reaction_time,
-id) %>%
separate(col = condition.angle,
into = c("condition", "angle"),
sep = -1) %>%
arrange(id,
condition,
angle)
long.data <- long.data %>% gather(key = condition.angle,
value = reaction_time,
-id) %>%
separate(col = condition.angle,
into = c("condition", "angle"),
sep = -1) %>%
arrange(id,
condition,
angle)
head(long.data)
long.data$id <- as.factor(long.data$id)
long.data$condition <- as.factor(long.data$condition)
long.data$angle <- as.factor(long.data$angle)
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
tinytex::install_tinytex()
blogdown:::serve_site()
blogdown:::serve_site()
library(AMCP)
# Load the data
data(chapter_12_table_1)
# Display part of the data
head(chapter_12_table_1)
library(jmv)
library(tictoc)
# Repeated measures anova with jmv
tic()
anovaRM(
data = chapter_12_table_1,
rm = list(
list(
label = "Condition",
levels = c("Absent", "Present")),
list(
label = "Angle",
levels = c("0", "4", "8"))),
rmCells = list(
list(
measure = "Absent0",
cell = c("Absent", "0")),
list(
measure = "Absent4",
cell = c("Absent", "4")),
list(
measure = "Absent8",
cell = c("Absent", "8")),
list(
measure = "Present0",
cell = c("Present", "0")),
list(
measure = "Present4",
cell = c("Present", "4")),
list(
measure = "Present8",
cell = c("Present", "8"))),
rmTerms = ~ Condition + Angle + Condition:Angle,
effectSize = 'partEta',
emMeans = ~ Condition:Angle,
emmPlots = TRUE
)
toc()
library(tidyverse)
library(rstatix)
library(ggpubr)
library(tictoc)
# Create a new data frame with a subject id
rm_data <- cbind(id = c(1:10), chapter_12_table_1)
# Convert the data from wide to long
rm_data <-  rm_data %>%
gather(key = Condition.Angle,
value = Reaction_Time,
-id) %>%
separate(col = Condition.Angle,
into = c("Condition", "Angle"),
sep = -1) %>%
arrange(id,
Condition,
Angle) %>%
convert_as_factor(Condition, Angle)
# Conduct repeated measures ANOVA
tic()
rm_aov <- anova_test(
data = rm_data,
dv = Reaction_Time,
wid = id,
within = c(Condition, Angle),
effect.size = "pes",
)
get_anova_table(rm_aov, correction = "none")
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "set1",
position = position_dodge(.2))
toc()
library(tidyverse)
library(rstatix)
library(ggpubr)
library(tictoc)
# Create a new data frame with a subject id
rm_data <- cbind(id = c(1:10), chapter_12_table_1)
# Convert the data from wide to long
rm_data <-  rm_data %>%
gather(key = Condition.Angle,
value = Reaction_Time,
-id) %>%
separate(col = Condition.Angle,
into = c("Condition", "Angle"),
sep = -1) %>%
arrange(id,
Condition,
Angle) %>%
convert_as_factor(Condition, Angle)
# Conduct repeated measures ANOVA
tic()
rm_aov <- anova_test(
data = rm_data,
dv = Reaction_Time,
wid = id,
within = c(Condition, Angle),
effect.size = "pes",
)
get_anova_table(rm_aov, correction = "none")
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "Set1",
position = position_dodge(.2))
toc()
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "Set2",
position = position_dodge(.2))
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "Dark2",
position = position_dodge(.2))
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "Dark1",
position = position_dodge(.2))
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "Paired",
position = position_dodge(.2))
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "Accent",
position = position_dodge(.2))
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "PRGn",
position = position_dodge(.2))
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "Blues",
position = position_dodge(.2))
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "BuGn",
position = position_dodge(.2))
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "Accent",
position = position_dodge(.2))
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "Set1",
position = position_dodge(.2))
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "jama",
position = position_dodge(.2))
library(tidyverse)
library(rstatix)
library(ggpubr)
library(tictoc)
# Create a new data frame with a subject id
rm_data <- cbind(id = c(1:10), chapter_12_table_1)
# Convert the data from wide to long
rm_data <-  rm_data %>%
gather(key = Condition.Angle,
value = Reaction_Time,
-id) %>%
separate(col = Condition.Angle,
into = c("Condition", "Angle"),
sep = -1) %>%
arrange(id,
Condition,
Angle) %>%
convert_as_factor(Condition, Angle)
# Conduct repeated measures ANOVA
tic()
rm_aov <- anova_test(
data = rm_data,
dv = Reaction_Time,
wid = id,
within = c(Condition, Angle),
effect.size = "pes",
)
get_anova_table(rm_aov, correction = "none")
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "jama",
position = position_dodge(.2))
toc <- toc()
print(toc)
print(time$toc)
library(tidyverse)
library(rstatix)
library(ggpubr)
library(tictoc)
# Create a new data frame with a subject id
rm_data <- cbind(id = c(1:10), chapter_12_table_1)
# Convert the data from wide to long
rm_data <-  rm_data %>%
gather(key = Condition.Angle,
value = Reaction_Time,
-id) %>%
separate(col = Condition.Angle,
into = c("Condition", "Angle"),
sep = -1) %>%
arrange(id,
Condition,
Angle) %>%
convert_as_factor(Condition, Angle)
# Conduct repeated measures ANOVA
tic()
rm_aov <- anova_test(
data = rm_data,
dv = Reaction_Time,
wid = id,
within = c(Condition, Angle),
effect.size = "pes",
)
get_anova_table(rm_aov, correction = "none")
# Generate Plot
ggline(rm_data,
"Condition",
"Reaction_Time",
color = "Angle",
add = "mean_se",
palette = "jama",
position = position_dodge(.2))
time <- toc()
print(time$toc)
blogdown:::new_post_addin()
library(tidyverse)
library(rstatix)
library(ggpubr)
# Create a new data frame with a subject id
rm_data <- cbind(id = c(1:12), chapter_11_table_5)
library(AMCP)
# Load data
data("chapter_11_table_5")
# Inspect data
head(chapter_11_table_5)
library(jmv)
# Repeated measures anova with jmv
anovaRM(
data = chapter_11_table_5,
rm = list(
list(
label = "Age-in-months",
levels = c("30", "36", "42", "48"))),
rmCells = list(
list(
measure = "Months30",
cell = "30"),
list(
measure = "Months36",
cell = "36"),
list(
measure = "Months42",
cell = "42"),
list(
measure = "Months48",
cell = "48")),
rmTerms = list(
"Age-in-months"),
spherCorr = 'none',
effectSize = 'partEta',
emMeans = ~ `Age-in-months`,
emmPlots = TRUE,
postHocCorr = "none",
postHoc = "Age-in-months",
depLabel = "Mean MSCA Scores")
library(tidyverse)
library(rstatix)
library(ggpubr)
# Create a new data frame with a subject id
rm_data <- cbind(id = c(1:12), chapter_11_table_5)
# Convert from wide to long format then convert id and age to factor
rm_data <- rm_data %>%
gather(., age, score, Months30:Months48) %>%
convert_as_factor(id, age)
# Inspect data
head(rm_data)
# Conduct repeated measures ANOVA
rm_aov <- anova_test(
data = rm_data,
dv = score,
wid = id,
within = age,
effect.size = "pes",
detailed = TRUE
)
# Print anova table
get_anova_table(rm_aov, correction = "none")
# pairwise comparisons
pwc <- rm_data %>%
pairwise_t_test(
score ~ age, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc
library(tidyverse)
library(rstatix)
library(ggpubr)
# Create a new data frame with a subject id
rm_data <- cbind(id = c(1:12), chapter_11_table_5)
# Convert from wide to long format then convert id and age to factor
rm_data <- rm_data %>%
gather(., age, score, Months30:Months48) %>%
convert_as_factor(id, age)
# Inspect data
head(rm_data)
# Conduct repeated measures ANOVA
rm_aov <- anova_test(
data = rm_data,
dv = score,
wid = id,
within = age,
effect.size = "pes",
detailed = TRUE
)
# Print anova table
get_anova_table(rm_aov, correction = "none")
# pairwise comparisons
pwc <- rm_data %>%
pairwise_t_test(
score ~ age, paired = TRUE,
p.adjust.method = "none"
)
pwc
View(rm_data)
library(tidyverse)
library(rstatix)
library(ggpubr)
# Create a new data frame with a subject id
rm_data <- cbind(id = c(1:12), chapter_11_table_5)
# Convert from wide to long format then convert id and age to factor
rm_data <- rm_data %>%
gather(., age, score, Months30:Months48) %>%
convert_as_factor(id, age)
# Inspect data
head(rm_data)
# Conduct repeated measures ANOVA
rm_aov <- anova_test(
data = rm_data,
dv = score,
wid = id,
within = age,
effect.size = "pes",
detailed = TRUE
)
# Print anova table
get_anova_table(rm_aov, correction = "none")
# pairwise comparisons
pwc <- rm_data %>%
pairwise_t_test(
score ~ age, paired = TRUE,
p.adjust.method = "none"
)
pwc
model <- aov(score ~ age + Error(id/age), data = rm_data)
pwc <- rm_data %>%
emmeans_test(score ~ age,
p.adjust.method = "none",
model = model)
pwc
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
read_csv("Depression.csv")
library(readr)
read_csv("Depression.csv")
setwd("~/OneDrive/Web Site/hugo_website/content/guides/r/2021-05-20-importing-data")
setwd("~/OneDrive/Web Site/hugo_website/content/guides/r/2021-05-20-importing-data")
read_csv("Depression.csv")
read_csv("Depression.csv", col_types = cols())
read.csv("Depression.csv", col_types = cols())
read.csv("Depression.csv")
read.table("Depression.csv")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::serve_site()
